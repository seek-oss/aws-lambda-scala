-dontoptimize
-dontobfuscate

-dontwarn org.apache.logging.log4j.**
-dontwarn org.slf4j.**

# Keep enums https://www.guardsquare.com/en/products/proguard/manual/examples#enumerations
-keepclassmembers,allowoptimization enum * {
  public static **[] values();
  public static ** valueOf(java.lang.String);
}

# Keep our app
-keep class tekumara.** { *; }

# Keep the lambda interfaces + logging implementation
-keep class com.amazonaws.services.lambda.runtime.** { *; }

# Logging classes - can probably optimize this further as we don't
# need everything and it's about 1 MB all up

# keep classes in org.apache.logging.log4j:log4j-slf4j-impl
-keep class org.apache.logging.slf4j.**     { *; }
-keep class org.slf4j.impl.**               { *; }

# keep classes in org.apache.logging.log4j:log4j-core
-keep class org.apache.logging.log4j.** { *; }

# from https://www.guardsquare.com/en/products/proguard/manual/examples#scala
-libraryjars <java.home>/lib/rt.jar

-dontwarn scala.**

-keepclasseswithmembers public class * {
  public static void main(java.lang.String[]);
}

-keep class * implements org.xml.sax.EntityResolver

-keepclassmembers class * {
  ** MODULE$;
}

-keepclassmembernames class scala.concurrent.forkjoin.ForkJoinPool {
  long eventCount;
  int  workerCounts;
  int  runControl;
  scala.concurrent.forkjoin.ForkJoinPool$WaitQueueNode syncStack;
  scala.concurrent.forkjoin.ForkJoinPool$WaitQueueNode spareStack;
}

-keepclassmembernames class scala.concurrent.forkjoin.ForkJoinWorkerThread {
  int base;
  int sp;
  int runState;
}

-keepclassmembernames class scala.concurrent.forkjoin.ForkJoinTask {
  int status;
}

-keepclassmembernames class scala.concurrent.forkjoin.LinkedTransferQueue {
  scala.concurrent.forkjoin.LinkedTransferQueue$PaddedAtomicReference head;
  scala.concurrent.forkjoin.LinkedTransferQueue$PaddedAtomicReference tail;
  scala.concurrent.forkjoin.LinkedTransferQueue$PaddedAtomicReference cleanMe;
}